Terminals unused in grammar

   DPLUS_L
   DPLUS_R
   DMINUS_L
   DMINUS_R
   ARRAY_CALL
   IF_ELSE
   FUNC_CALL
   ARGS
   EXT_VAR_DEF
   FUNC_DEC
   FUNC_DEF
   VAR_LIST
   VAR_ID
   VAR_INIT
   INIT_VALUE
   FUN_ID
   PARAMS_LIST
   PARAMS
   EXT_DEF_LIST
   STM
   STM_LIST
   STMT_VAR_DEF
   ARRAY_ID
   ARRAY_INIT
   ARRAY_ELE_ASSIGN
   ARRAY_ASSIGN
   VALUE_LIST
   COMPASSIGN_ID


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: /* empty */
    3             | external_definition ext_def_list

    4 exp: exp AND exp
    5    | exp OR exp
    6    | exp RELOP exp
    7    | exp PLUS exp
    8    | exp MINUS exp
    9    | exp STAR exp
   10    | exp DIV exp
   11    | MINUS exp
   12    | LP exp RP
   13    | NOT exp
   14    | DPLUS exp
   15    | exp DPLUS
   16    | DMINUS exp
   17    | exp DMINUS
   18    | ID LP args RP
   19    | ID LP RP
   20    | ID LB exp RB
   21    | ID
   22    | constant
   23    | ID ASSIGNOP exp
   24    | ID COMPASSIGN exp

   25 args: exp COMMA args
   26     | exp

   27 external_definition: specifier ext_var_list SEMI
   28                    | specifier function_declaration SEMI
   29                    | specifier function_declaration compound_statement
   30                    | COMMENT
   31                    | error

   32 ext_var_list: var
   33             | var COMMA ext_var_list

   34 var: ID LB INT RB
   35    | ID ASSIGNOP exp
   36    | ID
   37    | ID LB INT RB ASSIGNOP LB value_list RB

   38 array_assign: ID LB exp RB ASSIGNOP exp
   39             | ID ASSIGNOP LB value_list RB

   40 value_list: constant
   41           | constant COMMA value_list

   42 constant: INT
   43         | FLOAT
   44         | CHAR

   45 specifier: TYPE

   46 function_declaration: ID LP params_list RP
   47                     | ID LP RP

   48 params_list: params_dec
   49            | params_dec COMMA params_list

   50 params_dec: specifier ID

   51 compound_statement: LC statement_list RC

   52 statement_list: /* empty */
   53               | statement statement_list

   54 statement: compound_statement
   55          | exp SEMI
   56          | array_assign SEMI
   57          | COMMENT
   58          | RETURN exp SEMI
   59          | specifier var_list SEMI
   60          | IF LP exp RP statement
   61          | IF LP exp RP statement ELSE statement
   62          | WHILE LP exp RP statement
   63          | jump SEMI

   64 jump: CONTINUE
   65     | BREAK

   66 var_list: var
   67         | var COMMA var_list


Terminals, with rules where they appear

$end (0) 0
error (256) 31
INT (258) 34 37 42
CHAR (259) 44
ID (260) 18 19 20 21 23 24 34 35 36 37 38 39 46 47 50
TYPE (261) 45
RELOP (262) 6
FLOAT (263) 43
COMMENT (264) 30 57
COMPASSIGN (265) 24
LP (266) 12 18 19 46 47 60 61 62
RP (267) 12 18 19 46 47 60 61 62
LC (268) 51
RC (269) 51
LB (270) 20 34 37 38 39
RB (271) 20 34 37 38 39
PLUS (272) 7
MINUS (273) 8 11
STAR (274) 9
DIV (275) 10
ASSIGNOP (276) 23 35 37 38 39
AND (277) 4
OR (278) 5
NOT (279) 13
DPLUS_L (280)
DPLUS_R (281)
DMINUS_L (282)
DMINUS_R (283)
COMMA (284) 25 33 41 49 67
SEMI (285) 27 28 55 56 58 59 63
ARRAY_CALL (286)
RETURN (287) 58
IF (288) 60 61
IF_ELSE (289)
WHILE (290) 62
FUNC_CALL (291)
ARGS (292)
EXT_VAR_DEF (293)
FUNC_DEC (294)
FUNC_DEF (295)
VAR_LIST (296)
VAR_ID (297)
VAR_INIT (298)
INIT_VALUE (299)
FUN_ID (300)
PARAMS_LIST (301)
PARAMS (302)
EXT_DEF_LIST (303)
STM (304)
STM_LIST (305)
STMT_VAR_DEF (306)
ARRAY_ID (307)
ARRAY_INIT (308)
ARRAY_ELE_ASSIGN (309)
ARRAY_ASSIGN (310)
VALUE_LIST (311)
CONTINUE (312) 64
BREAK (313) 65
COMPASSIGN_ID (314)
DMINUS (315) 16 17
DPLUS (316) 14 15
UMINUS (317)
LOWER_THEN_ELSE (318)
ELSE (319) 61


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
program (66)
    on left: 1, on right: 0
ext_def_list (67)
    on left: 2 3, on right: 1 3
exp (68)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24, on right: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 20 23 24 25 26
    35 38 55 58 60 61 62
args (69)
    on left: 25 26, on right: 18 25
external_definition (70)
    on left: 27 28 29 30 31, on right: 3
ext_var_list (71)
    on left: 32 33, on right: 27 33
var (72)
    on left: 34 35 36 37, on right: 32 33 66 67
array_assign (73)
    on left: 38 39, on right: 56
value_list (74)
    on left: 40 41, on right: 37 39 41
constant (75)
    on left: 42 43 44, on right: 22 40 41
specifier (76)
    on left: 45, on right: 27 28 29 50 59
function_declaration (77)
    on left: 46 47, on right: 28 29
params_list (78)
    on left: 48 49, on right: 46 49
params_dec (79)
    on left: 50, on right: 48 49
compound_statement (80)
    on left: 51, on right: 29 54
statement_list (81)
    on left: 52 53, on right: 51 53
statement (82)
    on left: 54 55 56 57 58 59 60 61 62 63, on right: 53 60 61 62
jump (83)
    on left: 64 65, on right: 63
var_list (84)
    on left: 66 67, on right: 59 67


state 0

    0 $accept: . program $end

    error    shift, and go to state 1
    TYPE     shift, and go to state 2
    COMMENT  shift, and go to state 3

    $end  reduce using rule 2 (ext_def_list)

    program              go to state 4
    ext_def_list         go to state 5
    external_definition  go to state 6
    specifier            go to state 7


state 1

   31 external_definition: error .

    $default  reduce using rule 31 (external_definition)


state 2

   45 specifier: TYPE .

    $default  reduce using rule 45 (specifier)


state 3

   30 external_definition: COMMENT .

    $default  reduce using rule 30 (external_definition)


state 4

    0 $accept: program . $end

    $end  shift, and go to state 8


state 5

    1 program: ext_def_list .

    $default  reduce using rule 1 (program)


state 6

    3 ext_def_list: external_definition . ext_def_list

    error    shift, and go to state 1
    TYPE     shift, and go to state 2
    COMMENT  shift, and go to state 3

    $end  reduce using rule 2 (ext_def_list)

    ext_def_list         go to state 9
    external_definition  go to state 6
    specifier            go to state 7


state 7

   27 external_definition: specifier . ext_var_list SEMI
   28                    | specifier . function_declaration SEMI
   29                    | specifier . function_declaration compound_statement

    ID  shift, and go to state 10

    ext_var_list          go to state 11
    var                   go to state 12
    function_declaration  go to state 13


state 8

    0 $accept: program $end .

    $default  accept


state 9

    3 ext_def_list: external_definition ext_def_list .

    $default  reduce using rule 3 (ext_def_list)


state 10

   34 var: ID . LB INT RB
   35    | ID . ASSIGNOP exp
   36    | ID .
   37    | ID . LB INT RB ASSIGNOP LB value_list RB
   46 function_declaration: ID . LP params_list RP
   47                     | ID . LP RP

    LP        shift, and go to state 14
    LB        shift, and go to state 15
    ASSIGNOP  shift, and go to state 16

    $default  reduce using rule 36 (var)


state 11

   27 external_definition: specifier ext_var_list . SEMI

    SEMI  shift, and go to state 17


state 12

   32 ext_var_list: var .
   33             | var . COMMA ext_var_list

    COMMA  shift, and go to state 18

    $default  reduce using rule 32 (ext_var_list)


state 13

   28 external_definition: specifier function_declaration . SEMI
   29                    | specifier function_declaration . compound_statement

    LC    shift, and go to state 19
    SEMI  shift, and go to state 20

    compound_statement  go to state 21


state 14

   46 function_declaration: ID LP . params_list RP
   47                     | ID LP . RP

    TYPE  shift, and go to state 2
    RP    shift, and go to state 22

    specifier    go to state 23
    params_list  go to state 24
    params_dec   go to state 25


state 15

   34 var: ID LB . INT RB
   37    | ID LB . INT RB ASSIGNOP LB value_list RB

    INT  shift, and go to state 26


state 16

   35 var: ID ASSIGNOP . exp

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 36
    constant  go to state 37


state 17

   27 external_definition: specifier ext_var_list SEMI .

    $default  reduce using rule 27 (external_definition)


state 18

   33 ext_var_list: var COMMA . ext_var_list

    ID  shift, and go to state 38

    ext_var_list  go to state 39
    var           go to state 12


state 19

   51 compound_statement: LC . statement_list RC

    INT       shift, and go to state 27
    CHAR      shift, and go to state 28
    ID        shift, and go to state 40
    TYPE      shift, and go to state 2
    FLOAT     shift, and go to state 30
    COMMENT   shift, and go to state 41
    LP        shift, and go to state 31
    LC        shift, and go to state 19
    MINUS     shift, and go to state 32
    NOT       shift, and go to state 33
    RETURN    shift, and go to state 42
    IF        shift, and go to state 43
    WHILE     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    BREAK     shift, and go to state 46
    DMINUS    shift, and go to state 34
    DPLUS     shift, and go to state 35

    $default  reduce using rule 52 (statement_list)

    exp                 go to state 47
    array_assign        go to state 48
    constant            go to state 37
    specifier           go to state 49
    compound_statement  go to state 50
    statement_list      go to state 51
    statement           go to state 52
    jump                go to state 53


state 20

   28 external_definition: specifier function_declaration SEMI .

    $default  reduce using rule 28 (external_definition)


state 21

   29 external_definition: specifier function_declaration compound_statement .

    $default  reduce using rule 29 (external_definition)


state 22

   47 function_declaration: ID LP RP .

    $default  reduce using rule 47 (function_declaration)


state 23

   50 params_dec: specifier . ID

    ID  shift, and go to state 54


state 24

   46 function_declaration: ID LP params_list . RP

    RP  shift, and go to state 55


state 25

   48 params_list: params_dec .
   49            | params_dec . COMMA params_list

    COMMA  shift, and go to state 56

    $default  reduce using rule 48 (params_list)


state 26

   34 var: ID LB INT . RB
   37    | ID LB INT . RB ASSIGNOP LB value_list RB

    RB  shift, and go to state 57


state 27

   42 constant: INT .

    $default  reduce using rule 42 (constant)


state 28

   44 constant: CHAR .

    $default  reduce using rule 44 (constant)


state 29

   18 exp: ID . LP args RP
   19    | ID . LP RP
   20    | ID . LB exp RB
   21    | ID .
   23    | ID . ASSIGNOP exp
   24    | ID . COMPASSIGN exp

    COMPASSIGN  shift, and go to state 58
    LP          shift, and go to state 59
    LB          shift, and go to state 60
    ASSIGNOP    shift, and go to state 61

    $default  reduce using rule 21 (exp)


state 30

   43 constant: FLOAT .

    $default  reduce using rule 43 (constant)


state 31

   12 exp: LP . exp RP

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 62
    constant  go to state 37


state 32

   11 exp: MINUS . exp

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 63
    constant  go to state 37


state 33

   13 exp: NOT . exp

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 64
    constant  go to state 37


state 34

   16 exp: DMINUS . exp

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 65
    constant  go to state 37


state 35

   14 exp: DPLUS . exp

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 66
    constant  go to state 37


state 36

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS
   35 var: ID ASSIGNOP exp .

    RELOP   shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    STAR    shift, and go to state 70
    DIV     shift, and go to state 71
    AND     shift, and go to state 72
    OR      shift, and go to state 73
    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75

    $default  reduce using rule 35 (var)


state 37

   22 exp: constant .

    $default  reduce using rule 22 (exp)


state 38

   34 var: ID . LB INT RB
   35    | ID . ASSIGNOP exp
   36    | ID .
   37    | ID . LB INT RB ASSIGNOP LB value_list RB

    LB        shift, and go to state 15
    ASSIGNOP  shift, and go to state 16

    $default  reduce using rule 36 (var)


state 39

   33 ext_var_list: var COMMA ext_var_list .

    $default  reduce using rule 33 (ext_var_list)


state 40

   18 exp: ID . LP args RP
   19    | ID . LP RP
   20    | ID . LB exp RB
   21    | ID .
   23    | ID . ASSIGNOP exp
   24    | ID . COMPASSIGN exp
   38 array_assign: ID . LB exp RB ASSIGNOP exp
   39             | ID . ASSIGNOP LB value_list RB

    COMPASSIGN  shift, and go to state 58
    LP          shift, and go to state 59
    LB          shift, and go to state 76
    ASSIGNOP    shift, and go to state 77

    $default  reduce using rule 21 (exp)


state 41

   57 statement: COMMENT .

    $default  reduce using rule 57 (statement)


state 42

   58 statement: RETURN . exp SEMI

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 78
    constant  go to state 37


state 43

   60 statement: IF . LP exp RP statement
   61          | IF . LP exp RP statement ELSE statement

    LP  shift, and go to state 79


state 44

   62 statement: WHILE . LP exp RP statement

    LP  shift, and go to state 80


state 45

   64 jump: CONTINUE .

    $default  reduce using rule 64 (jump)


state 46

   65 jump: BREAK .

    $default  reduce using rule 65 (jump)


state 47

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS
   55 statement: exp . SEMI

    RELOP   shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    STAR    shift, and go to state 70
    DIV     shift, and go to state 71
    AND     shift, and go to state 72
    OR      shift, and go to state 73
    SEMI    shift, and go to state 81
    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75


state 48

   56 statement: array_assign . SEMI

    SEMI  shift, and go to state 82


state 49

   59 statement: specifier . var_list SEMI

    ID  shift, and go to state 38

    var       go to state 83
    var_list  go to state 84


state 50

   54 statement: compound_statement .

    $default  reduce using rule 54 (statement)


state 51

   51 compound_statement: LC statement_list . RC

    RC  shift, and go to state 85


state 52

   53 statement_list: statement . statement_list

    INT       shift, and go to state 27
    CHAR      shift, and go to state 28
    ID        shift, and go to state 40
    TYPE      shift, and go to state 2
    FLOAT     shift, and go to state 30
    COMMENT   shift, and go to state 41
    LP        shift, and go to state 31
    LC        shift, and go to state 19
    MINUS     shift, and go to state 32
    NOT       shift, and go to state 33
    RETURN    shift, and go to state 42
    IF        shift, and go to state 43
    WHILE     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    BREAK     shift, and go to state 46
    DMINUS    shift, and go to state 34
    DPLUS     shift, and go to state 35

    $default  reduce using rule 52 (statement_list)

    exp                 go to state 47
    array_assign        go to state 48
    constant            go to state 37
    specifier           go to state 49
    compound_statement  go to state 50
    statement_list      go to state 86
    statement           go to state 52
    jump                go to state 53


state 53

   63 statement: jump . SEMI

    SEMI  shift, and go to state 87


state 54

   50 params_dec: specifier ID .

    $default  reduce using rule 50 (params_dec)


state 55

   46 function_declaration: ID LP params_list RP .

    $default  reduce using rule 46 (function_declaration)


state 56

   49 params_list: params_dec COMMA . params_list

    TYPE  shift, and go to state 2

    specifier    go to state 23
    params_list  go to state 88
    params_dec   go to state 25


state 57

   34 var: ID LB INT RB .
   37    | ID LB INT RB . ASSIGNOP LB value_list RB

    ASSIGNOP  shift, and go to state 89

    $default  reduce using rule 34 (var)


state 58

   24 exp: ID COMPASSIGN . exp

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 90
    constant  go to state 37


state 59

   18 exp: ID LP . args RP
   19    | ID LP . RP

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    RP      shift, and go to state 91
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 92
    args      go to state 93
    constant  go to state 37


state 60

   20 exp: ID LB . exp RB

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 94
    constant  go to state 37


state 61

   23 exp: ID ASSIGNOP . exp

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 95
    constant  go to state 37


state 62

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   12    | LP exp . RP
   15    | exp . DPLUS
   17    | exp . DMINUS

    RELOP   shift, and go to state 67
    RP      shift, and go to state 96
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    STAR    shift, and go to state 70
    DIV     shift, and go to state 71
    AND     shift, and go to state 72
    OR      shift, and go to state 73
    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75


state 63

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   11    | MINUS exp .
   15    | exp . DPLUS
   17    | exp . DMINUS

    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75

    $default  reduce using rule 11 (exp)


state 64

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   13    | NOT exp .
   15    | exp . DPLUS
   17    | exp . DMINUS

    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75

    $default  reduce using rule 13 (exp)


state 65

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   16    | DMINUS exp .
   17    | exp . DMINUS

    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75

    $default  reduce using rule 16 (exp)


state 66

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   14    | DPLUS exp .
   15    | exp . DPLUS
   17    | exp . DMINUS

    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75

    $default  reduce using rule 14 (exp)


state 67

    6 exp: exp RELOP . exp

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 97
    constant  go to state 37


state 68

    7 exp: exp PLUS . exp

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 98
    constant  go to state 37


state 69

    8 exp: exp MINUS . exp

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 99
    constant  go to state 37


state 70

    9 exp: exp STAR . exp

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 100
    constant  go to state 37


state 71

   10 exp: exp DIV . exp

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 101
    constant  go to state 37


state 72

    4 exp: exp AND . exp

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 102
    constant  go to state 37


state 73

    5 exp: exp OR . exp

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 103
    constant  go to state 37


state 74

   17 exp: exp DMINUS .

    $default  reduce using rule 17 (exp)


state 75

   15 exp: exp DPLUS .

    $default  reduce using rule 15 (exp)


state 76

   20 exp: ID LB . exp RB
   38 array_assign: ID LB . exp RB ASSIGNOP exp

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 104
    constant  go to state 37


state 77

   23 exp: ID ASSIGNOP . exp
   39 array_assign: ID ASSIGNOP . LB value_list RB

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    LB      shift, and go to state 105
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 95
    constant  go to state 37


state 78

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS
   58 statement: RETURN exp . SEMI

    RELOP   shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    STAR    shift, and go to state 70
    DIV     shift, and go to state 71
    AND     shift, and go to state 72
    OR      shift, and go to state 73
    SEMI    shift, and go to state 106
    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75


state 79

   60 statement: IF LP . exp RP statement
   61          | IF LP . exp RP statement ELSE statement

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 107
    constant  go to state 37


state 80

   62 statement: WHILE LP . exp RP statement

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 108
    constant  go to state 37


state 81

   55 statement: exp SEMI .

    $default  reduce using rule 55 (statement)


state 82

   56 statement: array_assign SEMI .

    $default  reduce using rule 56 (statement)


state 83

   66 var_list: var .
   67         | var . COMMA var_list

    COMMA  shift, and go to state 109

    $default  reduce using rule 66 (var_list)


state 84

   59 statement: specifier var_list . SEMI

    SEMI  shift, and go to state 110


state 85

   51 compound_statement: LC statement_list RC .

    $default  reduce using rule 51 (compound_statement)


state 86

   53 statement_list: statement statement_list .

    $default  reduce using rule 53 (statement_list)


state 87

   63 statement: jump SEMI .

    $default  reduce using rule 63 (statement)


state 88

   49 params_list: params_dec COMMA params_list .

    $default  reduce using rule 49 (params_list)


state 89

   37 var: ID LB INT RB ASSIGNOP . LB value_list RB

    LB  shift, and go to state 111


state 90

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS
   24    | ID COMPASSIGN exp .

    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75

    $default  reduce using rule 24 (exp)


state 91

   19 exp: ID LP RP .

    $default  reduce using rule 19 (exp)


state 92

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS
   25 args: exp . COMMA args
   26     | exp .

    RELOP   shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    STAR    shift, and go to state 70
    DIV     shift, and go to state 71
    AND     shift, and go to state 72
    OR      shift, and go to state 73
    COMMA   shift, and go to state 112
    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75

    $default  reduce using rule 26 (args)


state 93

   18 exp: ID LP args . RP

    RP  shift, and go to state 113


state 94

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS
   20    | ID LB exp . RB

    RELOP   shift, and go to state 67
    RB      shift, and go to state 114
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    STAR    shift, and go to state 70
    DIV     shift, and go to state 71
    AND     shift, and go to state 72
    OR      shift, and go to state 73
    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75


state 95

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS
   23    | ID ASSIGNOP exp .

    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75

    $default  reduce using rule 23 (exp)


state 96

   12 exp: LP exp RP .

    $default  reduce using rule 12 (exp)


state 97

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    6    | exp RELOP exp .
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS

    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75

    $default  reduce using rule 6 (exp)


state 98

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    7    | exp PLUS exp .
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS

    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75

    $default  reduce using rule 7 (exp)


state 99

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    8    | exp MINUS exp .
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS

    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75

    $default  reduce using rule 8 (exp)


state 100

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
    9    | exp STAR exp .
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS

    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75

    $default  reduce using rule 9 (exp)


state 101

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   10    | exp DIV exp .
   15    | exp . DPLUS
   17    | exp . DMINUS

    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75

    $default  reduce using rule 10 (exp)


state 102

    4 exp: exp . AND exp
    4    | exp AND exp .
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS

    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75

    $default  reduce using rule 4 (exp)


state 103

    4 exp: exp . AND exp
    5    | exp . OR exp
    5    | exp OR exp .
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS

    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75

    $default  reduce using rule 5 (exp)


state 104

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS
   20    | ID LB exp . RB
   38 array_assign: ID LB exp . RB ASSIGNOP exp

    RELOP   shift, and go to state 67
    RB      shift, and go to state 115
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    STAR    shift, and go to state 70
    DIV     shift, and go to state 71
    AND     shift, and go to state 72
    OR      shift, and go to state 73
    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75


state 105

   39 array_assign: ID ASSIGNOP LB . value_list RB

    INT    shift, and go to state 27
    CHAR   shift, and go to state 28
    FLOAT  shift, and go to state 30

    value_list  go to state 116
    constant    go to state 117


state 106

   58 statement: RETURN exp SEMI .

    $default  reduce using rule 58 (statement)


state 107

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS
   60 statement: IF LP exp . RP statement
   61          | IF LP exp . RP statement ELSE statement

    RELOP   shift, and go to state 67
    RP      shift, and go to state 118
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    STAR    shift, and go to state 70
    DIV     shift, and go to state 71
    AND     shift, and go to state 72
    OR      shift, and go to state 73
    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75


state 108

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS
   62 statement: WHILE LP exp . RP statement

    RELOP   shift, and go to state 67
    RP      shift, and go to state 119
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    STAR    shift, and go to state 70
    DIV     shift, and go to state 71
    AND     shift, and go to state 72
    OR      shift, and go to state 73
    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75


state 109

   67 var_list: var COMMA . var_list

    ID  shift, and go to state 38

    var       go to state 83
    var_list  go to state 120


state 110

   59 statement: specifier var_list SEMI .

    $default  reduce using rule 59 (statement)


state 111

   37 var: ID LB INT RB ASSIGNOP LB . value_list RB

    INT    shift, and go to state 27
    CHAR   shift, and go to state 28
    FLOAT  shift, and go to state 30

    value_list  go to state 121
    constant    go to state 117


state 112

   25 args: exp COMMA . args

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 92
    args      go to state 122
    constant  go to state 37


state 113

   18 exp: ID LP args RP .

    $default  reduce using rule 18 (exp)


state 114

   20 exp: ID LB exp RB .

    $default  reduce using rule 20 (exp)


state 115

   20 exp: ID LB exp RB .
   38 array_assign: ID LB exp RB . ASSIGNOP exp

    ASSIGNOP  shift, and go to state 123

    $default  reduce using rule 20 (exp)


state 116

   39 array_assign: ID ASSIGNOP LB value_list . RB

    RB  shift, and go to state 124


state 117

   40 value_list: constant .
   41           | constant . COMMA value_list

    COMMA  shift, and go to state 125

    $default  reduce using rule 40 (value_list)


state 118

   60 statement: IF LP exp RP . statement
   61          | IF LP exp RP . statement ELSE statement

    INT       shift, and go to state 27
    CHAR      shift, and go to state 28
    ID        shift, and go to state 40
    TYPE      shift, and go to state 2
    FLOAT     shift, and go to state 30
    COMMENT   shift, and go to state 41
    LP        shift, and go to state 31
    LC        shift, and go to state 19
    MINUS     shift, and go to state 32
    NOT       shift, and go to state 33
    RETURN    shift, and go to state 42
    IF        shift, and go to state 43
    WHILE     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    BREAK     shift, and go to state 46
    DMINUS    shift, and go to state 34
    DPLUS     shift, and go to state 35

    exp                 go to state 47
    array_assign        go to state 48
    constant            go to state 37
    specifier           go to state 49
    compound_statement  go to state 50
    statement           go to state 126
    jump                go to state 53


state 119

   62 statement: WHILE LP exp RP . statement

    INT       shift, and go to state 27
    CHAR      shift, and go to state 28
    ID        shift, and go to state 40
    TYPE      shift, and go to state 2
    FLOAT     shift, and go to state 30
    COMMENT   shift, and go to state 41
    LP        shift, and go to state 31
    LC        shift, and go to state 19
    MINUS     shift, and go to state 32
    NOT       shift, and go to state 33
    RETURN    shift, and go to state 42
    IF        shift, and go to state 43
    WHILE     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    BREAK     shift, and go to state 46
    DMINUS    shift, and go to state 34
    DPLUS     shift, and go to state 35

    exp                 go to state 47
    array_assign        go to state 48
    constant            go to state 37
    specifier           go to state 49
    compound_statement  go to state 50
    statement           go to state 127
    jump                go to state 53


state 120

   67 var_list: var COMMA var_list .

    $default  reduce using rule 67 (var_list)


state 121

   37 var: ID LB INT RB ASSIGNOP LB value_list . RB

    RB  shift, and go to state 128


state 122

   25 args: exp COMMA args .

    $default  reduce using rule 25 (args)


state 123

   38 array_assign: ID LB exp RB ASSIGNOP . exp

    INT     shift, and go to state 27
    CHAR    shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    LP      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    DMINUS  shift, and go to state 34
    DPLUS   shift, and go to state 35

    exp       go to state 129
    constant  go to state 37


state 124

   39 array_assign: ID ASSIGNOP LB value_list RB .

    $default  reduce using rule 39 (array_assign)


state 125

   41 value_list: constant COMMA . value_list

    INT    shift, and go to state 27
    CHAR   shift, and go to state 28
    FLOAT  shift, and go to state 30

    value_list  go to state 130
    constant    go to state 117


state 126

   60 statement: IF LP exp RP statement .
   61          | IF LP exp RP statement . ELSE statement

    ELSE  shift, and go to state 131

    $default  reduce using rule 60 (statement)


state 127

   62 statement: WHILE LP exp RP statement .

    $default  reduce using rule 62 (statement)


state 128

   37 var: ID LB INT RB ASSIGNOP LB value_list RB .

    $default  reduce using rule 37 (var)


state 129

    4 exp: exp . AND exp
    5    | exp . OR exp
    6    | exp . RELOP exp
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . STAR exp
   10    | exp . DIV exp
   15    | exp . DPLUS
   17    | exp . DMINUS
   38 array_assign: ID LB exp RB ASSIGNOP exp .

    RELOP   shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    STAR    shift, and go to state 70
    DIV     shift, and go to state 71
    AND     shift, and go to state 72
    OR      shift, and go to state 73
    DMINUS  shift, and go to state 74
    DPLUS   shift, and go to state 75

    $default  reduce using rule 38 (array_assign)


state 130

   41 value_list: constant COMMA value_list .

    $default  reduce using rule 41 (value_list)


state 131

   61 statement: IF LP exp RP statement ELSE . statement

    INT       shift, and go to state 27
    CHAR      shift, and go to state 28
    ID        shift, and go to state 40
    TYPE      shift, and go to state 2
    FLOAT     shift, and go to state 30
    COMMENT   shift, and go to state 41
    LP        shift, and go to state 31
    LC        shift, and go to state 19
    MINUS     shift, and go to state 32
    NOT       shift, and go to state 33
    RETURN    shift, and go to state 42
    IF        shift, and go to state 43
    WHILE     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    BREAK     shift, and go to state 46
    DMINUS    shift, and go to state 34
    DPLUS     shift, and go to state 35

    exp                 go to state 47
    array_assign        go to state 48
    constant            go to state 37
    specifier           go to state 49
    compound_statement  go to state 50
    statement           go to state 132
    jump                go to state 53


state 132

   61 statement: IF LP exp RP statement ELSE statement .

    $default  reduce using rule 61 (statement)
